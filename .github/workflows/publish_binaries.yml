name: Make on multiple platforms
on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
jobs:
  create_release:
    runs-on: ubuntu-latest
    steps:
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
  build:
    needs: create_release
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        build_type: [Release]
        c_compiler: [gcc]
        architecture: [x86_64, arm64]
        include:
          - os: windows-latest
            c_compiler: gcc
          - os: ubuntu-latest
            c_compiler: gcc
          - os: ubuntu-latest
            c_compiler: gcc
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up upload URL
        run: echo "UPLOAD_URL=${{ needs.create_release.outputs.upload_url }}" >> $GITHUB_ENV

      - name: Install ALSA lib on Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get update && sudo apt-get install -y libasound2-dev

      - name: Make in container
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
        run: |
          docker run --rm -v $(pwd):/workspace -w /workspace --platform linux/${{ matrix.architecture }} gcc:latest make UNAME_S=${{ matrix.os }} UNAME_M=${{ matrix.architecture }}

      - name: Make
        if: matrix.os == 'windows-latest'
        run: |
          make UNAME_S=${{ matrix.os }} UNAME_M=${{ matrix.architecture }}
      
      - name: Upload Release Asset
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./bp3
          asset_name: bp3-${{ matrix.os }}-${{ matrix.architecture }}-${{ matrix.c_compiler }}
          asset_content_type: application/octet-stream
        
      - name: Upload Release Asset
        if: matrix.os == 'macos-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./bp
          asset_name: bp3-${{ matrix.os }}-${{ matrix.architecture }}-${{ matrix.c_compiler }}
          asset_content_type: application/octet-stream

      - name: Upload Release Asset
        if: matrix.os == 'windows-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./bp.exe
          asset_name: bp3-${{ matrix.os }}-${{ matrix.architecture }}-${{ matrix.c_compiler }}.exe
          asset_content_type: application/octet-stream
